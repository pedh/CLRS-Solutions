#+TITLE: Chapter 7 problems

* ch7-problems
** 7-1
   1. omitted
   2. A[p..i] and A[j..q] is the elements already accessed, A[i..j] is the elements never accessed.
   3. \(p - 1 \leq i < j < r\)
   4. \(A[p..j] \leq x\) and \(A[j + 1..r] \geq x\)
   5. QUICKSORT(A, p, r)
      #+BEGIN_SRC
      QUICKSORT(A, p, r)
          if p < r
              q = HOARE-PARTITION(A, p, r)
              QUICKSORT(A, p, q)
              QUICKSORT(A, q + 1, r)
      #+END_SRC
** 7-2
   1. \(O(n^2)\)
   2. PARTITION'(A, p, r)
      #+BEGIN_SRC
      PARTITION'(A, p, r)
          x = P[r]
          i = j = p - 1
          for k = p to r - 1
              if A[k] < x
                  i = i + 1
                  j = j + 1
                  y = A[j]
                  A[j] = A[i]
                  A[i] = A[k]
                  A[k] = y
              else if A[k] == x:
                  j = j + 1
                  exchange A[j] with A[k]
          exchange A[r] with A[j + 1]
          return i + 1, j + 1
      #+END_SRC
   3. RANDOMIZED-QUICKSORT(A, p, r)
      #+BEGIN_SRC
      QUICKSORT'(A, p, r)
          if p < r
              q, t = RANDOMIZED-PARTITION'(A, p, r)
              QUICKSORT(A, p, q - 1)
              QUICKSORT(A, t + 1, r)
      #+END_SRC
      #+BEGIN_SRC
      RANDOMIZED-PARTITION'(A, p, r)
          i = RANDOM(p, r)
          exchange A[r] with A[i]
          return PARTITION'(A, p, r)
      #+END_SRC
   4. Assume m elements less than the pivot, k elements equal to the pivot

      The expected running time is:

      \(T(n) = T(m) + T(n - k - m) + O(n) \leq T(m + k) + T(n - k - m) + O(n) = O(n\lg{n})\)
** 7-3
   1. \(E[X_i] = 1/n\)
   2. E[T(n)]

      = \(\sum^{n}_{q=1} X_q E[T(q - 1) + T(n - q) + \Theta(n)])\)

      = \(E[\sum^{n}_{q=1} X_q E[T(q - 1) + T(n - 1) + \Theta(n)]]\)
   3. E[T(n)]

      = \(E[\sum^{n}_{q=1} X_q E[T(q - 1) + T(n - 1) + \Theta(n)]]\)

      = \(1/n\sum^{n}_{q=1}E[T(q - 1)] + 1/n\sum^{n}_{q=1}E[T(n - q)] + 1/n\sum^{n}_{q=1}\Theta(n)\)

      = \(2/n\sum^{n - 1}_{q=2}E[T(q)] + \Theta(n)\)
   4. Two solutions
      - \(\int x^n\ln x dx = \frac{x^{n + 1}}{n + 1}[(n + 1)\ln x - 1] + C\)

        \(\because f'(x\lg x) = \frac{1}{\ln 2}(\ln x + 1) > 0 (x \geq 2)\)

        \(\therefore \sum^{n - 1}_{k = 2}k \lg{k}\)

        \(\leq \int^{n}_{2}x\lg x dx\)

        = \(\frac{n^2}{4}(2\lg n - \frac{1}{\ln 2}) - 2 + \frac{1}{\ln 2}\)

        < \(\frac{n^2}{2} \lg{n} - \frac{1}{8}n^2\)
      - \(\sum^{n - 1}_{k = 2}k \lg{k}\)

        \(\leq \sum^{n / 2}_{k = 2} k \lg (n / 2) + \sum^{n - 1}_{k = n / 2} k \lg n\)

        = \(\lg n \sum^{n - 1}_{k = 2} k - \sum^{n / 2}_{k = 2} k\)

        = \(\frac{n^2}{2}\lg n - \frac{1}{8} n^2\)
   5. Guess \(E[T(n)] \leq a n \lg n\), Then

      E[T(n)]

      = \(\frac{2}{n}\sum^{n - 1}{q = 2}E[T[q]] + \Theta(n)\)

      \(\leq \frac{2}{n}\sum^{n - 1}{q = 2} a q \lg q + \Theta(n)\)

      \(\leq \frac{2}{n}(\frac{a}{2}n^2 \lg n - \frac{a}{8} n^2) + \Theta(n)\)

      = \(a n \lg n - \frac{a n}{4} + \Theta(n)\)

      \(\leq a n \lg n\) (let a large enough to dominate \(\Theta(n)\))
** 7-4
   1. TAIL-RECURSIVE-QUICKSORT use a recursion to handle the left part, and a iteration to handle the right part
   2. TAIL-RECURSIVE-QUICKSORT(A, 1, n)

      -> TAIL-RECURSIVE-QUICKSORT(A, 1, n - 1)

      -> TAIL-RECURSIVE-QUICKSORT(A, 1, n - 2)

      ...

      -> TAIL-RECURSIVE-QUICKSORT(A, 1, 1)
   3. TAIL-RECURSIVE-QUICKSORT(A, p, r)
      #+BEGIN_SRC
      TAIL-RECURSIVE-QUICKSORT(A, p, r)
          q = partition(A, p, r)
          if q < (p + r) / 2
              TAIL-RECURSIVE-QUICKSORT(A, p, q - 1)
              p = q + 1
          else TAIL-RECURSIVE-QUICKSORT(A, q + 1, r)
               r = q - 1
      #+END_SRC
** 7-5
   1. \(p_i = \frac{(i - 1)(n - i)}{\binom{n}{3}}\)
   2. \(\lim_{n \to \infty} \frac{\frac{(i - 1)(n - i)}{\binom{n}{3}}}{\frac{1}{n}} = \frac{3}{2}\)
   3.
      - The original possibility

        \(Pr = \int^{\frac{2 n}{3}}_{\frac{1 n}{3}} \frac{1}{n} = \frac{1}{3}\)
      - The median-of-3 possibility

        \(Pr = \int^{\frac{2 n}{3}}_{\frac{1 n}{3}} \frac{(i - 1)(n - i)}{\binom{n}{3}}\)

             = \(\frac{n^2 (n + 1) - \frac{14}{27} n^3 - 2 n^2}{n (n - 1) (n - 2)}\)

        \(\lim_{n \to \infty}Pr = \frac{13}{27}\)
   4. The median-of-3 method only improve the possibility of choosing a good pivot, the running time is still \(\Omega(n \lg n)\)
** 7-6
   1. The FUZZY-SORT is similar with equal-elements-quicksort in problem 7-2
      #+BEGIN_SRC
      FUZZY-SORT(A, p, r)
          if p < r
              q, t = FUZZY-PARTITION(A, p, r)
              FUZZY-SORT(A, p, q - 1)
              FUZZY-SORT(A, t + 1, r)
      #+END_SRC
      #+BEGIN_SRC
      FUZZY-PARTITION(A, p, r)
          i = j = p - 1
          x = lo = A[r].left
          ro = A[r].right
          for k = p to r - 1
              if A[k].right < lo
                  y = A[k]
                  i = i + 1
                  j = j + 1
                  A[k] = A[j]
                  A[j] = A[i]
                  A[i] = y
              else if A[k].left <= ro
                  j = j + 1
                  if A[k].left > lo
                      lo = A[k].left
                  if A[k].right < ro
                      ro = A[k].right
                  exchange A[j] with A[k]
          exchange A[r] with A[j + 1]
          return i + 1, j + 1
      #+END_SRC
   2. Assume partition on n elements return k overlapped elements

      \(T(n) = T(n - k - i) + T(i) + \Theta(n)\)

      k is not strongly related to n, so the expected running time is \(\Theta(n\lg n)\)

      when all elements overlapped, the running time is \(\Theta(n)\)
